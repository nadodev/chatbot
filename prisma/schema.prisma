// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ChatConfig {
  id                String   @id @default(cuid())
  chatId            String   @unique
  chat              Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  aiProvider        String   @default("google") // "google" ou "openai"
  model             String   @default("gemini-1.5-flash")
  temperature       Float    @default(0.7)
  maxTokens         Int      @default(150)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@index([chatId])
}

model Products {
  id          String   @id @default(cuid())
  name        String
  description String   @db.Text
  price       Float
  in_stock    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Chat {
  id        String      @id @default(cuid())
  name      String
  avatar    String?
  greeting  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  messages  Message[]
  config    ChatConfig?
}

model Message {
  id        String   @id @default(cuid())
  content   String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model FAQ {
  id        Int      @id @default(autoincrement())
  question  String   @db.Text
  answer    String   @db.Text
  category  String   @default("general")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Settings {
  id           Int      @id @default(1)
  aiProvider   String   @default("google")
  googleApiKey String?
  openaiApiKey String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}